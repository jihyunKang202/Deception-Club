#include<stdio.h>//8강1번
#include<stdlib.h>
#include<time.h>
#define max 100
#pragma warning(disable:4996)
int main()
{
	int n, t = 10000;
	int a[max][max];
	int offset[][2] = { {0,-1},{1,0},{0,1},{-1,0} };
	int count = 0;
	srand((unsigned)time(NULL));
	scanf("%d", &n);
	for (int k = 0; k < t; k++)
	{
		int x = n / 2, y = n / 2;
		for (int i = 0; i < n; i++)
			for (int j = 0; j < n; j++)
				a[i][j] = 0;

		int suc = 1;
		while (x > 0 && x < n - 1 && y>0 && y < n - 1)
		{
			int dir = -1,count_a=0;
			a[x][y] = 1;
			for (int d = 0; d < 4; d++) {
				int i = x + offset[d][0];
				int j = y + offset[d][1];
				if (i >= 0 && i < n&&j >= 0 && j < n&&a[i][j] == 0) {
					count_a++;
					if (rand() % count_a == 0)
						dir = d;
				}
			}
			if (dir == -1) {
				suc = 0;
				break;
			}
			x += offset[dir][0];
			y += offset[dir][1];
		}
		if (suc == 1)count++;
	}
	printf("%lf\n", (double)count / t);
}


#include<stdio.h>//8강3번
#pragma warning(disable:4996)
int main()
{
	int n, k;
	int a[101][101];
	scanf("%d%d", &n, &k);
	for(int i=0;i<=n;i++)
		for (int j = 0; j <= i; j++)
		{
			if (j == 0 || i == j)
				a[i][j] = 1;
			else
				a[i][j] = a[i - 1][j - 1] + a[i - 1][j];
		}
	printf("%d", a[n][k]);
}



#include<stdio.h>//8강 4번
#include<math.h>
#define max 100
#pragma warning(disable:4996)
int main()
{
	int n, a[max][max];
	FILE*fp = fopen("input4.txt", "r");
	fscanf(fp, "%d", &n);
	for (int i = 0; i < n; i++) {
		int sum = 0, sum3 = 0;
		double mid, sum2 = 0.0, mid2;
		for (int j = 0; j < n; j++)
		{
			fscanf(fp, "%d ", &a[i][j]);
			sum += a[i][j];
			printf("%d ", a[i][j]);
		}
		mid = (double)sum / n;//각 행의 평균구하기
		printf("%lf ", mid);
		for (int j = 0; j < n; j++)
			sum2 += (mid - a[i][j])*(mid - a[i][j]);//각행의 표준편차 구하기
		printf("%lf\n", sqrt(sum2 / n));
	}fclose(fp);
	for (int j = 0; j < n; j++) {//각 열의 평균구하기
		int sum3 = 0; double mid2;
		for (int i = 0; i < n; i++) {
			sum3 += a[i][j];
		} mid2 = (double)sum3 / n;
		printf("%lf ", mid2);
	}printf("\n");
	for (int j = 0; j < n; j++) {//각 열의 표준편차구하기
		double sum4 = 0.0;
		int sum3 = 0; double mid2;
		for (int i = 0; i < n; i++) {
			sum3 += a[i][j];
		} mid2 = (double)sum3 / n;
		for (int i = 0; i < n; i++) {
			sum4 += (mid2 - a[i][j])*(mid2 - a[i][j]);
		}
		printf("%lf ", sqrt(sum4 / n));
	}
}


#include<stdio.h>//8강 6번
#pragma warning(disable:4996)
#define max 100
int main()
{
	int n, a[max][max], count[max][max] = { 0 };
	FILE*fp = fopen("input6.txt", "r");
	fscanf(fp, "%d", &n);
	for (int i = 0; i < n; i++)
		for (int j = 0; j < n; j++)
			fscanf(fp, "%d", &a[i][j]);
	fclose(fp); 
	int k = 1, i = 0, j = 0, l = 0;
	printf("%d ", a[0][0]);
	while (1)
	{
		if (count[i + 1][j] == 1 && count[i - 1][j] == 1 && count[i][j + 1] == 1 && count[i][j - 1] == 1)
			 break;
		if (k % 2 != 0 && i == l)
		{
			while (j < n-1&& count[i][j+1] == 0)
			{
				j++;
				printf("%d ", a[i][j]); count[i][j] = 1;
			}k++;
		}
		else if (k % 2 == 0 && j == n - 1)
		{
			while (i < n - 1&& count[i + 1][j] == 0)
			{
				i++;
				printf("%d ", a[i][j]); count[i][j] = 1;
			}k++;
		}
		else if (k % 2 != 0 && i == n - 1)
		{
			while (j >= l +1&& count[i][j-1] == 0)
			{
				j--;
				printf("%d ", a[i][j]); count[i][j] = 1;
			}k++;
		}
		else if (k % 4 == 0 && j == l)
		{
			while (i > l+1&& count[i-1][j]==0)
			{
				i--;
				printf("%d ", a[i][j]); count[i][j] = 1;
			}k++; l++; n--;
		}
	}
}


#include<stdio.h>//8강 7번
#include<math.h>
#define max 100
#pragma warning(disable:4996)
int main()
{
	int n, a[max], length = 1, b[max], l = 0, tmp[max], water = 0, high[max], m = 0, low[max];
	scanf("%d", &n);
	for (int i = 0; i < n; i++)
		scanf("%d", &a[i]);
	for (int i = 0; i < n; i++)
	{
		if (i == n - 1 || a[i] != a[i + 1])
			b[l++] = a[i];
		else
			length++;
		if (l % 3 == 0 && b[1] < b[0] && b[0] < b[2] || l % 3 == 0 && b[1] < b[0] && b[0] == b[2])
		{
			water += length*b[0] - b[1]; low[m] = b[0]; b[0] = b[2];
			l = 1; length = 1; high[m] = b[2]; tmp[m++] = i;
		}
		else if (l % 3 == 0 && b[1] < b[2] && b[2] < b[0])
		{
			water += length*b[2] - b[1]; high[m] = b[0]; low[m] = b[2]; b[0] = b[2];
			l = 1; length = 1; tmp[m++] = i;
		}
		else if (l % 3 == 0)
		{
			b[0] = b[1]; b[1] = b[2];
			length = 1;
			l = 2;
		}
		for (int k = 1; k < m; k++) {
			if (high[k] < high[k - 1] && high[k - 1] < a[i])
				water += abs(i - tmp[k - 1] - 1)*(high[k - 1] - high[k]);
			else if (high[k - 1] < high[k] && high[k] < a[i])
				water += (i - tmp[k] - 1)*(high[k] - high[k - 1]);
			else if (high[k - 1] < high[k] && low[k] == low[k - 1])
				water += (tmp[k] - 1)*(high[k - 1] - low[k]);
			else if (high[k] < high[k - 1] && low[k] == low[k - 1])
				water += (tmp[k] - 1)*(high[k] - low[k]);
		}
	}
	printf("%d", water);
}